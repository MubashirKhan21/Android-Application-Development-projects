1)	Write a program to capture an image and display it using image view. Ans.
activity_main.xml
 
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout

xmlns:android="http://schemas.android.com/ap k/res/android"

xmlns:app="http://schemas.android.com/apk/re s-auto"

xmlns:tools="http://schemas.android.com/tools "
android:layout_width="match_parent" android:layout_height="match_parent" tools:context=".MainActivity">
<Button
android:layout_width="wrap_content" android:layout_height="wrap_content" android:layout_marginLeft="140dp" android:id="@+id/camera_button" android:text="Camera" />
<ImageView android:layout_marginTop="70dp" android:layout_width="350dp" android:layout_marginLeft="15dp" android:layout_height="450dp" android:id="@+id/click_image" android:layout_marginBottom="10dp"/>
</RelativeLayout>

MainActivity.java
 
public class MainActivity extends AppCompatActivity {
// Define the pic id
private static final int pic_id = 123;
// Define the button and imageview type variable
Button camera_open_id; ImageView click_image_id; @Override
protected void onCreate(Bundle savedInstanceState)
{
super.onCreate(savedInstanceState); setContentView(R.layout.activity_main);
// By ID we can get each component
// which id is assigned in XML file
// get Buttons and imageview. camera_open_id =
(Button)findViewById(R.id.camera_button); click_image_id =
(ImageView)findViewById(R.id.click_image);
// Camera_open button is for open the camera
// and add the setOnClickListener in this button
camera_open_id.setOnClickListener(new View.OnClickListener() {
@Override
public void onClick(View v)
{
 
package com.example.camera; import android.content.Intent; import android.graphics.Bitmap; import android.provider.MediaStore; import android.os.Bundle;
import android.view.View; import android.widget.Button;
import android.widget.ImageView; import
androidx.appcompat.app.AppCompatActivity;
 
// Create the camera_intent ACTION_IMAGE_CAPTURE
// it will open the camera for capture the
image
Intent camera_intent
= new Intent(MediaStore
.ACTION_IMAGE_CAPTURE);
// Start the activity with camera_intent,
// and request pic id startActivityForResult(camera_intent,
pic_id);
}
 
});
}
// This method will help to retrieve the image
protected void onActivityResult(int requestCode,
int resultCode, Intent data) {
// Match the request 'pic id with requestCode
super.onActivityResult(requestCode, resultCode, data);
 
if (requestCode == pic_id) {
// BitMap is data structure of image file
// which store the image in memory Bitmap photo = (Bitmap) data.getExtras()
.get("data");
// Set the image in imageview for display click_image_id.setImageBitmap(photo);
}
}
}

2)	Write a program to record a video using various camera methods. Ans.
 
activity_main.xml
<?xml version="1.0" encoding="UTF-8" ?>
<RelativeLayout xmlns:android="http://schemas.android.com/a pk/res/android"
android:layout_width="match_parent" android:layout_height="match_parent">
<Button
android:id="@+id/button1" android:layout_width="wrap_content" android:layout_height="wrap_content" android:layout_centerInParent="true" android:text="Record Video" />
</RelativeLayout>

MainActivity.java
package com.example.recordvideo; import androidx.annotation.Nullable;
import androidx.appcompat.app.AlertDialog; import androidx.appcompat.app.AppCompatActivity; import android.content.Intent;
import android.os.Bundle;
import android.provider.MediaStore; import android.view.View;
import android.widget.Button; import android.widget.VideoView; public class MainActivity extends AppCompatActivity {
Button b; @Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState); setContentView(R.layout.activity_main); b = findViewById(R.id.button1); b.setOnClickListener(new
View.OnClickListener() { @Override
public void onClick(View view) { Intent intent = new
Intent(MediaStore.ACTION_VIDEO_CAPTU RE);
intent.putExtra(MediaStore.EXTRA_DURATI ON_LIMIT, 10);
startActivityForResult(intent, 1);
}
});
 
}
@Override
protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
super.onActivityResult(requestCode, resultCode, data);
if (resultCode == RESULT_OK && requestCode == 1) {
AlertDialog.Builder builder = new AlertDialog.Builder(this);
VideoView videoView = new VideoView(this);
videoView.setVideoURI(data.getData()); videoView.start(); builder.setView(videoView).show();
}}}

AndroidManifest.xml
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/ res/android"
package="com.example.recordvideo">
<uses-feature android:name="android.hardware.camera" android:required="true" />
<application android:allowBackup="true" android:icon="@mipmap/ic_launcher" android:label="@string/app_name"
android:roundIcon="@mipmap/ic_launcher_roun d"
android:supportsRtl="true" android:theme="@style/Theme.Recordvideo">
<activity android:name=".MainActivity" android:exported="true">
<intent-filter>
<action android:name="android.intent.action.MAIN" />
<category android:name="android.intent.category.LAUN CHER" />
</intent-filter>
</activity>
</application>
</manifest>
