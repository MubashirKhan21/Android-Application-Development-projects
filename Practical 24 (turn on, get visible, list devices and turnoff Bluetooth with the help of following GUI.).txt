Write a program to turn on, get visible, list devices and turnoff Bluetooth with the help of following GUI.
Ans.
 
activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/ap k/res/android"

xmlns:app="http://schemas.android.com/apk/re s-auto"

xmlns:tools="http://schemas.android.com/tools "
android:layout_width="match_parent" android:layout_height="match_parent" tools:context=".MainActivity" android:orientation="vertical" android:layout_margin="20dp">
<TextView android:id="@+id/textView" android:layout_width="match_parent"
android:layout_height="wrap_content" android:text="Bluetooth" android:textColor="@color/black" android:textSize="30dp" />
<Button
android:id="@+id/turnon" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="Turn On" android:clickable="true" android:onClick="on"/>
<Button
android:id="@+id/getvisible" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="Get Visible" android:onClick="visible"/>
<Button
android:id="@+id/listdevice" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="List Devices"
 
android:onClick="list"/>
<Button
android:id="@+id/turnoff" android:layout_width="wrap_content" android:layout_height="wrap_content" android:text="Turn Off" android:onClick="off" />
<ListView android:layout_width="match_parent" android:layout_height="match_parent" android:id="@+id/list" android:layout_marginTop="20dp"/>
</LinearLayout>

MainActivity.java
package com.example.bluetooth; import
androidx.appcompat.app.AppCompatActivity; import androidx.core.app.ActivityCompat; import android.Manifest;
import android.bluetooth.BluetoothAdapter; import android.bluetooth.BluetoothDevice; import android.content.Intent;
import android.content.pm.PackageManager; import android.os.Bundle;
import android.view.View;
import android.widget.ArrayAdapter; import android.widget.Button; import android.widget.ListView; import android.widget.Toast;
import java.util.Set; import java.util.ArrayList;
public class MainActivity extends AppCompatActivity {
Button turnon, getvisible, turnoff, listdevice; BluetoothAdapter BA;
ListView lv; @Override
protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
 
setContentView(R.layout.activity_main);		} turnon = (Button)	}
findViewById(R.id.turnon);
 
turnoff = (Button) findViewById(R.id.turnoff);
getvisible = (Button) findViewById(R.id.getvisible); listdevice = (Button) findViewById(R.id.listdevice);
lv = (ListView) findViewById(R.id.list); BA =
BluetoothAdapter.getDefaultAdapter();
}
public void on(View v) { if (!BA.isEnabled()) { Intent turnOn = new
Intent(BluetoothAdapter.ACTION_REQUEST
_ENABLE);
if (ActivityCompat.checkSelfPermission(this, Manifest.permission.BLUETOOTH_CONNEC
T) != PackageManager.PERMISSION_GRANTED)
startActivityForResult(turnOn, 1);

Toast.makeText(getApplicationContext(), "Turned On", Toast.LENGTH_LONG).show();
} else {

Toast.makeText(getApplicationContext(), "Already On", Toast.LENGTH_LONG).show();
}
}
public void off(View v) { if (!BA.isEnabled()) {
if (ActivityCompat.checkSelfPermission(this, Manifest.permission.BLUETOOTH_CONNEC
T) != PackageManager.PERMISSION_GRANTED)

Toast.makeText(getApplicationContext(), "Turned On", Toast.LENGTH_LONG).show();
} else {
BA.disable(); Toast.makeText(getApplicationContext(), "Turned Off", Toast.LENGTH_LONG).show();
 
public void visible(View v) { Intent getVisible = new
Intent(BluetoothAdapter.ACTION_REQUEST_D ISCOVERABLE);
if (ActivityCompat.checkSelfPermission(this, Manifest.permission.BLUETOOTH_ADVERTIS
E) != PackageManager.PERMISSION_GRANTED) {
startActivityForResult(getVisible, 0);
}
}
public void list(View v) { ArrayList list = new ArrayList(); if
(ActivityCompat.checkSelfPermission(this, Manifest.permission.BLUETOOTH_CONNECT)
!= PackageManager.PERMISSION_GRANTED)
{
Set<BluetoothDevice> pairedDevices = BA.getBondedDevices();
for(BluetoothDevice bt : pairedDevices){ list.add(bt.getName());
}

Toast.makeText(getApplicationContext(),"Showi ng Paired Devices",Toast.LENGTH_SHORT).show();
final ArrayAdapter adapter = new ArrayAdapter(this,android.R.layout.simple_list_it em_1,list);
lv.setAdapter(adapter);
}
}
}

AndroidManifest.xml
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/ res/android"
package="com.example.bluetooth">
<uses-permission android:name="android.permission.BLUETO OTH_ADVERTISE" />
 
<uses-permission android:name="android.permission.BLUETOO TH_CONNECT" />
<uses-permission android:name="android.permission.BLUETOO TH"/>
<uses-permission android:name="android.permission.BLUETOO TH_ADMIN"/>
<uses-permission android:name="android.permission.ACCESS_ COARSE_LOCATION"/>
<application android:allowBackup="true" android:icon="@mipmap/ic_launcher" android:label="@string/app_name"
 

android:roundIcon="@mipmap/ic_launcher_r ound"
android:supportsRtl="true" android:theme="@style/Theme.Bluetooth">
<activity android:name=".MainActivity" android:exported="true">
<intent-filter>
<action android:name="android.intent.action.MAIN" />
<category android:name="android.intent.category.LAUNC HER" />
</intent-filter>
</activity>
</application>
</manifest>
